{{- range .Values.releases}}
{{- $name := .name}}
{{- if (default .createNamespace false)}}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $name }}
---
{{- end }}
{{- with .auth}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  namespace: {{ $name }}
type: Opaque
stringData:
  username: "{{ .username }}"
  password: "{{ .password }}"
{{- end }}
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: {{ $name }}
  namespace: {{ $name }}
spec:
  {{- with .auth }}
  secretRef:
    name: {{ $name }}
  {{- end }}
  interval: 1m
  ref:
    branch: {{ .branch }}
  url: {{ .url }}
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: {{ $name }}
  namespace: {{ $name }}
spec:
  interval: 1m
  prune: true
  wait: {{ .wait }}
  timeout: {{ .timeout }}
  healthChecks:
    {{ range .healthChecks }}
      - apiVersion: {{ .apiVersion }}
        kind:  {{ .kind }}
        name: {{ .name }}
        namespace: {{ .namespace }}
    {{ end}}
  postBuild:
    substitute:
      var_substitution_enabled: 'true'
      {{- range $k, $v := .values }}
      {{ $k }}: "{{ $v }}"
      {{- end }}
  sourceRef:
    kind: GitRepository
    name: {{ .name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $name }}-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $name }}-sa
rules:
  - apiGroups: [ "helm.toolkit.fluxcd.io", "kustomize.toolkit.fluxcd.io" ]
    resources:
      - helmreleases
      - kustomizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $name }}-sa
subjects:
  - kind: ServiceAccount
    name: {{ $name }}-sa
    namespace: {{ $.Release.Namespace }}
roleRef:
  kind: Role
  name: {{ $name }}-sa
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $name }}-healthcheck
  annotations:
    "helm.sh/hook": post-install
spec:
  template:
    metadata:
      name: kubectl
    spec:
      serviceAccountName: {{ $name }}-sa
      containers:
        - name: kubectl
          image: "bitnami/kubectl"
          command: [ "bin/bash", "-c", "kubectl wait --for=condition=ready kustomization/{{ $name }} -n {{ $.Release.Namespace}} --timeout=10m" ]
      restartPolicy: Never
{{- end }}